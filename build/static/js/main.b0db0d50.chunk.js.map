{"version":3,"sources":["components/Header.js","components/NavItem.js","components/FormRow.js","components/Form.js","components/InputText.js","components/ComboBox.js","components/SearchCharacterForm.js","components/Navbar.js","components/CharacterCard.js","api/rickAndMortyApi.js","components/Home.js","components/CharacterResult.js","components/PagesNavigator.js","components/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","text","setText","className","onMouseEnter","onMouseLeave","NavItem","content","onClick","FormRow","name","input","label","charAt","toUpperCase","slice","htmlFor","Form","rows","onSubmit","submitButtonText","map","index","type","value","defaultProps","InputText","placeholder","id","setState","onChange","event","currentTarget","ComboBox","options","option","string","SearchCharacterForm","setName","status","setStatus","gender","setGender","redirect","setRedirect","history","useHistory","useEffect","console","log","push","handleSubmit","a","preventDefault","redirectUrl","Navbar","showForm","setShowForm","CharacterCard","statusIcon","genderIcon","character","style","color","src","image","alt","species","baseUrl","fetchRandomCharacters","url","i","randInt","Math","floor","random","length","fetch","response","json","searchCharacters","Home","useQuery","isLoading","data","error","CharacterResult","href","rel","target","PagesNavigator","locationSearch","requestInfo","pages","buildNewPageUrl","newPage","pageParams","URLSearchParams","set","toString","redirectToSearchPage","pageNumber","searchParams","actualPage","prevPageSplited","prev","split","next","urlSearch","prevPage","get","Number","to","pathname","search","SearchResults","location","useLocation","params","page","refetch","info","results","App","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","client","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kfAmBeA,EAhBA,WACb,MAAwBC,mBAAS,QAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,wBAAQC,UAAU,cAAlB,SACE,+BACE,sBACEC,aAAc,kBAAMF,EAAQ,UAC5BG,aAAc,kBAAMH,EAAQ,SAF9B,SAGED,IAJJ,iB,sBCQSK,EAZC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC1B,OACE,qBAAIA,QAASA,EAAb,UACE,cAAC,IAAD,IADF,IACgBD,M,yBCWLE,G,MAfC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjBC,EAAQF,EAAKG,OAAO,GAAGC,cAAgBJ,EAAKK,MAAM,GACxD,OACE,sBAAKZ,UAAU,WAAf,UACE,uBAAOa,QAASN,EAAhB,SAAuBE,IACtBD,OCLDM,G,MAAO,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAC9B,OACE,uBAAMD,SAAUA,EAAUhB,UAAU,cAApC,UACGe,EAAKG,KAAI,YAA2B,IAAD,mBAAxBC,EAAwB,KAAjBZ,EAAiB,KAAXC,EAAW,KAClC,OAAO,cAAC,EAAD,CAAqBD,KAAMA,EAAMC,MAAOA,GAA1BW,MAGvB,uBAAOC,KAAK,SAASC,MAAOJ,EAAkBjB,UAAU,oBAK9Dc,EAAKQ,aAAe,CAClBL,iBAAkB,eAGLH,QChBTS,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACpC,OACE,uBACEN,KAAK,OACLK,GAAIA,EACJD,YAAaA,EACbjB,KAAMkB,EACNE,SAAU,SAACC,GAAD,OAAWF,EAASE,EAAMC,cAAcR,YAKxDE,EAAUD,aAAe,CACvBE,YAAa,0BAQAD,QCQAO,G,MA7BE,SAAC,GAA+B,IAA7BL,EAA4B,EAA5BA,GAAIM,EAAwB,EAAxBA,QAASL,EAAe,EAAfA,SAK/B,OACE,mCACE,wBACEC,SAAU,SAACC,GAAD,OAAWF,EAASE,EAAMC,cAAcR,QAClDI,GAAIA,EACJlB,KAAMkB,EAHR,SAKGM,EAAQb,KAAI,SAACc,GACZ,OACE,wBAAqBX,MAAOW,EAA5B,UAbUC,EAcID,EAbfC,EAAOvB,OAAO,GAAGC,cAAgBsB,EAAOrB,MAAM,KAYhCoB,GAbJ,IAACC,W,OCyDPC,EAvDa,WAC1B,MAAwBrC,mBAAS,IAAjC,mBAAOU,EAAP,KAAa4B,EAAb,KACA,EAA4BtC,mBAAS,OAArC,mBAAOuC,EAAP,KAAeC,EAAf,KACA,EAA4BxC,mBAAS,OAArC,mBAAOyC,EAAP,KAAeC,EAAf,KACA,EAAgC1C,mBAAS,MAAzC,mBAAO2C,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,cAEhBC,qBAAU,WACQ,MAAZJ,IACJK,QAAQC,IAAIJ,GACZA,EAAQK,KAAKP,GACbC,EAAY,SACX,CAACD,EAAUE,IAEd,IAAM3B,EAAO,CACX,CACE,EACA,OACA,cAAC,EAAD,CAAWS,YAAY,UAAUC,GAAG,OAAOC,SAAUS,KAEvD,CACE,EACA,SACA,cAAC,EAAD,CACEV,GAAG,SACHM,QAAS,CAAC,MAAO,QAAS,OAAQ,WAClCL,SAAUW,KAGd,CACE,EACA,SACA,cAAC,EAAD,CACEZ,GAAG,SACHM,QAAS,CAAC,MAAO,OAAQ,SAAU,aAAc,WACjDL,SAAUa,MAKVS,EAAY,uCAAG,WAAOpB,GAAP,eAAAqB,EAAA,sDACnBrB,EAAMsB,iBACAC,EAFa,wBAEkB5C,EAFlB,mBAGN,QAAX6B,EAAmBA,EAAS,GAHX,mBAIG,QAAXE,EAAmBA,EAAS,IACvCG,EAAYU,GALO,2CAAH,sDAQlB,OACE,mCACE,cAAC,EAAD,CAAMpC,KAAMA,EAAME,iBAAiB,SAASD,SAAUgC,O,QCvB7CI,EA3BA,WACb,MAAgCvD,oBAAS,GAAzC,mBAAOwD,EAAP,KAAiBC,EAAjB,KAYA,OACE,qCACE,gCACE,sCACA,cAAC,EAAD,CAASlD,QAAQ,aAAaC,QAAS,kBAAMiD,GAAaD,SAE5D,sBAAKrD,UAAS,uBAAkBqD,EAAW,eAAiB,IAA5D,UACGA,GAAY,cAAC,EAAD,IACb,cAAC,IAAD,CAASrD,UAAU,sB,wBC8BZuD,G,MApDO,SAAC,GAAmB,IACpCC,EAAYC,EADOC,EAAgB,EAAhBA,UAoCvB,OAhCEF,EADuB,UAArBE,EAAUtB,OAEV,cAAC,IAAD,CACEuB,MAAO,CACLC,MAAO,aAIe,SAArBF,EAAUtB,OAEf,cAAC,IAAD,CACEuB,MAAO,CACLC,MAAO,aAMX,cAAC,IAAD,CACED,MAAO,CACLC,MAAO,aAMbH,EADuB,WAArBC,EAAUpB,OACC,cAAC,IAAD,CAAUqB,MAAO,CAAEC,MAAO,aACX,SAArBF,EAAUpB,OACJ,cAAC,IAAD,CAAQqB,MAAO,CAAEC,MAAO,aACT,eAArBF,EAAUpB,OACJ,cAAC,IAAD,CAAiBqB,MAAO,CAAEC,MAAO,aAC9B,cAAC,IAAD,CAAcD,MAAO,CAAEC,MAAO,aAG9C,sBAAK5D,UAAU,iBAAf,UACE,qBAAK6D,IAAKH,EAAUI,MAAOC,IAAKL,EAAUnD,OAC1C,sBAAKP,UAAU,uBAAf,UACE,mBAAGA,UAAU,kBAAb,SAAgC0D,EAAUnD,OAC1C,oBAAGP,UAAU,oBAAb,UACGwD,EADH,IACgBE,EAAUtB,OAD1B,MACqCsB,EAAUM,WAE/C,oBAAGhE,UAAU,oBAAb,UACGyD,EADH,IACgBC,EAAUpB,kBClD5B2B,EAAU,kCAEVC,EAAqB,uCAAG,oCAAAjB,EAAA,sDAE5B,IADIkB,EAAMF,EAAU,cACXG,EAAI,EAAGA,EAAI,GAAIA,IAChBC,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAClDL,GAAsC,MAA/BA,EAAIzD,OAAOyD,EAAIM,OAAS,GAAaJ,EAArC,WAAmDA,GAJhC,gBAMLK,MAAMP,GAND,cAMtBQ,EANsB,gBAOTA,EAASC,OAPA,cAOtBA,EAPsB,yBAQrBA,GARqB,2CAAH,qDAWrBC,EAAgB,uCAAG,uCAAA5B,EAAA,6DAAS1C,EAAT,EAASA,KAAM6B,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,OACxC6B,EACJF,EAAO,2BACa1D,EADb,mBACuC,QAAX6B,EAAmB,GAAKA,EADpD,mBACgF,QAAXE,EAAmB,GAAKA,GAH/E,SAKAoC,MAAMP,GALN,cAKjBQ,EALiB,gBAMJA,EAASC,OANL,cAMjBA,EANiB,yBAOhBA,GAPgB,2CAAH,sDCiBPE,G,MAzBF,WACX,MAAmCC,YACjC,mBACAb,GAFMc,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,MAKzB,OAAIF,EACK,wCAGLE,EACK,4BAAIA,IAIX,+BACE,qBAAKlF,UAAU,kBAAf,SACGiF,EAAK/D,KAAI,SAACwC,GAAD,OACR,cAAC,EAAD,CAAkCA,UAAWA,GAAzBA,EAAUjC,aCZzB0D,G,MATS,SAAC,GAAmB,IAAjBzB,EAAgB,EAAhBA,UACzB,OACE,sBAAK1D,UAAU,mBAAf,UACE,qBAAK6D,IAAKH,EAAUI,MAAOC,IAAKL,EAAUnD,KAAMP,UAAU,0BAC1D,mBAAGoF,KAAM1B,EAAUS,IAAKkB,IAAI,aAAaC,OAAO,SAAStF,UAAU,iBAAnE,SAAqF0D,EAAUnD,Y,QC+DtFgF,G,MAjEQ,SAAC,GAyBtB,IAzB2D,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACpCC,EAAQ,GACNhD,EAAUC,cAEVgD,EAAkB,SAACC,GACvB,IAAMC,EAAa,IAAIC,gBAAgBN,GAEvC,OADAK,EAAWE,IAAI,OAAQH,GAChB,IAAMC,EAAWG,YAGpBC,EAAuB,SAACC,GAC5B,IAAMC,EAAeR,EAAgBO,GACrCxD,EAAQK,KAAK,WAAaoD,IAGtBC,EAAc,WAClB,IAAMC,EAAkBZ,EAAYa,MAAQb,EAAYa,KAAKC,MAAM,KACnE,IAAKF,EAAiB,OAAO,EAE7B,KADwBZ,EAAYe,MAAQf,EAAYe,KAAKD,MAAM,MAC7C,OAAOd,EAAYC,MACzC,IAAMe,EAAYJ,EAAgBA,EAAgB5B,OAAS,GACrDiC,EAAW,IAAIZ,gBAAgBW,GAAWE,IAAI,QACpD,OAAOC,OAAOF,GAAY,EAPR,GAUXtC,EAAI,EAAGA,EAAIqB,EAAYC,MAAOtB,IACrCsB,EAAM3C,KACJ,cAAC,IAAD,CACE8D,GAAI,CACFC,SAAU,WACVC,OAAQpB,EAAgBvB,EAAI,IAG9BpE,UAAS,wBACPoE,EAAI,IAAMgC,EAAa,eAAiB,IAP5C,SAUGhC,EAAI,GALAA,IAUX,OACE,sBAAKpE,UAAU,kBAAf,UACE,cAAC,IAAD,CACEK,QACE+F,GAAc,EAAI,KAAO,kBAAMH,EAAqBG,EAAa,IAEnEpG,UAAS,yBAAoBoG,GAAc,EAAI,WAAa,MAE9D,qBAAKpG,UAAU,2BAAf,SAA2C0F,IAC3C,cAAC,IAAD,CACErF,QACE+F,GAAcX,EAAYC,MACtB,KACA,kBAAMO,EAAqBG,EAAa,IAE9CpG,UAAS,yBACPoG,GAAcX,EAAYC,MAAQ,WAAa,WCR1CsB,G,MA9CO,WACpB,IAAMC,EAAWC,cACjB,EAA4CnC,YAC1C,mBADkD,sBAElD,oCAAA9B,EAAA,6DACQkE,EAAS,IAAIrB,gBAAgBmB,EAASF,QACtCxG,EAAO4G,EAAOR,IAAI,QAClBvE,EAAS+E,EAAOR,IAAI,WAAa,MACjCrE,EAAS6E,EAAOR,IAAI,WAAa,MACjCS,EAAOD,EAAOR,IAAI,SAAW,IALrC,SAMe9B,EAAiB,CAAEtE,OAAM6B,SAAQE,SAAQ8E,SANxD,oFAFMpC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,MAAOmC,EAAhC,EAAgCA,QAgBhC,OAJAzE,qBAAU,WACRyE,MACC,CAACJ,EAAUI,IAEVrC,EAAkB,2CAClBE,EAAc,4BAAIA,IAElBD,EAAKC,MAEL,8BACE,6CAAgB,IAAIY,gBAAgBmB,EAASF,QAAQJ,IAAI,QAAzD,mBAMJ,sBAAK3G,UAAU,YAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAGA,UAAU,uBAAb,gCACsB,IAAI8F,gBAAgBmB,EAASF,QAAQJ,IAAI,QAD/D,OAGA,cAAC,EAAD,CAAgBnB,eAAgByB,EAASF,OAAQtB,YAAaR,EAAKqC,UAErE,qBAAKtH,UAAU,iBAAf,SACGiF,EAAKsC,QAAQrG,KAAI,SAACwC,GACjB,OAAO,cAAC,EAAD,CAAoCA,UAAWA,GAAzBA,EAAUjC,c,gBClBlC+F,G,MArBH,WACV,IAAMC,EAAc,IAAIC,IAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,MAK5B,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,UACE,cAAC,IAAD,CAAOO,KAAK,IAAIC,OAAK,EAACC,UAAWpD,IACjC,cAAC,IAAD,CAAOkD,KAAK,WAAWC,OAAK,EAACC,UAAWlB,YCXjCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0db0d50.chunk.js","sourcesContent":["import \"./Header.css\";\nimport { useState } from \"react\";\n\nconst Header = () => {\n  const [text, setText] = useState(\"Rick\");\n\n  return (\n    <header className=\"main-header\">\n      <h1>\n        <span\n          onMouseEnter={() => setText(\"React\")}\n          onMouseLeave={() => setText(\"Rick\")}\n        >{text}\n        </span> & Morty\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import \"./NavItem.css\";\nimport PropTypes from \"prop-types\";\nimport { BsSearch } from \"react-icons/bs\";\n\nconst NavItem = ({ content, onClick }) => {\n  return (\n    <li onClick={onClick}>\n      <BsSearch /> {content}\n    </li>\n  );\n};\n\nNavItem.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n\nexport default NavItem;\n","import \"./FormRow.css\";\nimport PropTypes from \"prop-types\";\n\nconst FormRow = ({ name, input }) => {\n  const label = name.charAt(0).toUpperCase() + name.slice(1);\n  return (\n    <div className=\"form-row\">\n      <label htmlFor={name}>{label}</label>\n      {input}\n    </div>\n  );\n};\n\nFormRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  input: PropTypes.any.isRequired,\n};\n\nexport default FormRow;\n","import FormRow from \"./FormRow\";\nimport \"./Form.css\";\n\nconst Form = ({ rows, onSubmit, submitButtonText }) => {\n  return (\n    <form onSubmit={onSubmit} className=\"search-form\">\n      {rows.map(([index, name, input]) => {\n        return <FormRow key={index} name={name} input={input} />;\n      })}\n\n      <input type=\"submit\" value={submitButtonText} className=\"btn-submit\" />\n    </form>\n  );\n};\n\nForm.defaultProps = {\n  submitButtonText: \"Submit Form\"\n}\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport \"./InputText.css\";\n\nconst InputText = ({ placeholder, id, setState }) => {\n  return (\n    <input\n      type=\"text\"\n      id={id}\n      placeholder={placeholder}\n      name={id}\n      onChange={(event) => setState(event.currentTarget.value)}\n    />\n  );\n};\n\nInputText.defaultProps = {\n  placeholder: \"Placeholder by default\",\n};\n\nInputText.propTypes = {\n  placeholder: PropTypes.string,\n  id: PropTypes.string.isRequired,\n};\n\nexport default InputText;\n","import PropTypes from \"prop-types\";\nimport \"./ComboBox.css\";\n\nconst ComboBox = ({ id, options, setState }) => {\n  const capitalize = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <>\n      <select\n        onChange={(event) => setState(event.currentTarget.value)}\n        id={id}\n        name={id}\n      >\n        {options.map((option) => {\n          return (\n            <option key={option} value={option}>\n              {capitalize(option)}\n            </option>\n          );\n        })}\n      </select>\n    </>\n  );\n};\n\nComboBox.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ComboBox;\n","import Form from \"./Form\";\nimport InputText from \"./InputText\";\nimport ComboBox from \"./ComboBox\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SearchCharacterForm = () => {\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"any\");\n  const [gender, setGender] = useState(\"any\");\n  const [redirect, setRedirect] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (redirect == null) return;\n    console.log(history)\n    history.push(redirect);\n    setRedirect(null);\n  }, [redirect, history]);\n\n  const rows = [\n    [\n      0,\n      \"name\",\n      <InputText placeholder=\"Name...\" id=\"name\" setState={setName} />,\n    ],\n    [\n      1,\n      \"status\",\n      <ComboBox\n        id=\"status\"\n        options={[\"any\", \"alive\", \"dead\", \"unknown\"]}\n        setState={setStatus}\n      />,\n    ],\n    [\n      2,\n      \"gender\",\n      <ComboBox\n        id=\"gender\"\n        options={[\"any\", \"male\", \"female\", \"genderless\", \"unknown\"]}\n        setState={setGender}\n      />,\n    ],\n  ];\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const redirectUrl = `/search/?name=${name}&status=${\n      status !== \"any\" ? status : \"\"\n    }&gender=${gender !== \"any\" ? gender : \"\"}`;\n    setRedirect(redirectUrl);\n  };\n\n  return (\n    <>\n      <Form rows={rows} submitButtonText=\"Search\" onSubmit={handleSubmit} />\n    </>\n  );\n};\n\nexport default SearchCharacterForm;\n","import \"./Navbar.css\";\nimport NavItem from \"./NavItem\";\nimport SearchCharacterForm from \"./SearchCharacterForm\";\nimport { useState } from \"react\";\nimport { FaReact } from \"react-icons/fa\";\n\nconst Navbar = () => {\n  const [showForm, setShowForm] = useState(false);\n\n  const navItems = [\n    [\n      \"Characters\",\n      () =>\n        showForm !== \"characters\"\n          ? setShowForm(\"characters\")\n          : setShowForm(null),\n    ]\n  ];\n\n  return (\n    <>\n      <nav>\n        <h3>Logo</h3>\n        <NavItem content=\"Characters\" onClick={() => setShowForm(!showForm)} />\n      </nav>\n      <div className={`form-section ${showForm ? \"display-grid\" : \"\"}`}>\n        {showForm && <SearchCharacterForm />}\n        <FaReact className=\"react-logo\" />\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","import { FaHeart, FaGenderless } from \"react-icons/fa\";\nimport { GiDeathSkull, GiFemale, GiMale } from \"react-icons/gi\";\nimport { GrStatusUnknown } from \"react-icons/gr\";\nimport \"./CharacterCard.css\";\n\nconst CharacterCard = ({ character }) => {\n  let statusIcon, genderIcon;\n\n  if (character.status === \"Alive\")\n    statusIcon = (\n      <FaHeart\n        style={{\n          color: \"#E5525F\",\n        }}\n      />\n    );\n  else if (character.status === \"Dead\")\n    statusIcon = (\n      <GiDeathSkull\n        style={{\n          color: \"#B8B8B8\",\n        }}\n      />\n    );\n  else\n    statusIcon = (\n      <GrStatusUnknown\n        style={{\n          color: \"#242424\",\n        }}\n      />\n    );\n\n  if (character.gender === \"Female\")\n    genderIcon = <GiFemale style={{ color: \"#E684B9\" }} />;\n  else if (character.gender === \"Male\")\n    genderIcon = <GiMale style={{ color: \"#499CE4\" }} />;\n  else if (character.gender === \"Genderless\")\n    genderIcon = <GrStatusUnknown style={{ color: \"#242424\" }} />;\n  else genderIcon = <FaGenderless style={{ color: \"#242424\" }} />;\n\n  return (\n    <div className=\"character-card\">\n      <img src={character.image} alt={character.name} />\n      <div className=\"character-card__info\">\n        <p className=\"character__name\">{character.name}</p>\n        <p className=\"character__status\">\n          {statusIcon} {character.status} - {character.species}\n        </p>\n        <p className=\"character__gender\">\n          {genderIcon} {character.gender}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterCard;\n","const baseUrl = \"https://rickandmortyapi.com/api\";\n\nconst fetchRandomCharacters = async () => {\n  let url = baseUrl + \"/character/\";\n  for (let i = 0; i < 10; i++) {\n    const randInt = Math.floor(Math.random() * 671) + 1;\n    url += url.charAt(url.length - 1) === \"/\" ? randInt : `,${randInt}`;\n  }\n  const response = await fetch(url);\n  const json = await response.json();\n  return json;\n};\n\nconst searchCharacters = async ({ name, status, gender }) => {\n  const url =\n    baseUrl +\n    `/character/?name=${name}&status=${status === \"any\" ? \"\" : status}&gender=${gender === \"any\" ? \"\" : gender}`;\n\n  const response = await fetch(url);\n  const json = await response.json()\n  return json;\n};\n\nexport {\n  fetchRandomCharacters,\n  searchCharacters\n}\n","import { useQuery } from \"react-query\";\nimport CharacterCard from \"./CharacterCard\";\nimport { fetchRandomCharacters } from \"../api/rickAndMortyApi\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const { isLoading, data, error } = useQuery(\n    \"randomCharacters\",\n    fetchRandomCharacters\n  );\n\n  if (isLoading) {\n    return <p>Loading</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <main>\n      <div className=\"character-cards\">\n        {data.map((character) => (\n          <CharacterCard key={character.id} character={character} />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import \"./CharacterResult.css\";\n\nconst CharacterResult = ({ character }) => {\n  return (\n    <div className=\"character-result\">\n      <img src={character.image} alt={character.name} className=\"character-result__img\"/>\n      <a href={character.url} rel=\"noreferrer\" target=\"_blank\" className=\"character-name\">{character.name}</a>\n    </div>\n  );\n};\n\nexport default CharacterResult;\n","import { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./PagesNavigator.css\";\n\nconst PagesNavigator = ({ locationSearch, requestInfo }) => {\n  let pages = [];\n  const history = useHistory();\n\n  const buildNewPageUrl = (newPage) => {\n    const pageParams = new URLSearchParams(locationSearch);\n    pageParams.set(\"page\", newPage);\n    return \"?\" + pageParams.toString();\n  };\n\n  const redirectToSearchPage = (pageNumber) => {\n    const searchParams = buildNewPageUrl(pageNumber);\n    history.push(\"/search/\" + searchParams);\n  };\n\n  const actualPage = (() => {\n    const prevPageSplited = requestInfo.prev && requestInfo.prev.split(\"/\");\n    if (!prevPageSplited) return 1;\n    const nextPageSplited = requestInfo.next && requestInfo.next.split(\"/\");\n    if (!nextPageSplited) return requestInfo.pages;\n    const urlSearch = prevPageSplited[prevPageSplited.length - 1];\n    const prevPage = new URLSearchParams(urlSearch).get(\"page\");\n    return Number(prevPage) + 1;\n  })();\n\n  for (let i = 0; i < requestInfo.pages; i++) {\n    pages.push(\n      <Link\n        to={{\n          pathname: \"/search/\",\n          search: buildNewPageUrl(i + 1),\n        }}\n        key={i}\n        className={`page-indicator${\n          i + 1 === actualPage ? \" actual-page\" : \"\"\n        }`}\n      >\n        {i + 1}\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"pages-navigator\">\n      <FaArrowLeft\n        onClick={\n          actualPage <= 1 ? null : () => redirectToSearchPage(actualPage - 1)\n        }\n        className={`page-nav-arrow ${actualPage <= 1 ? \"disabled\" : \"\"}`}\n      />\n      <div className=\"page-indicator-container\">{pages}</div>\n      <FaArrowRight\n        onClick={\n          actualPage >= requestInfo.pages\n            ? null\n            : () => redirectToSearchPage(actualPage + 1)\n        }\n        className={`page-nav-arrow ${\n          actualPage >= requestInfo.pages ? \"disabled\" : \"\"\n        }`}\n      />\n    </div>\n  );\n};\n\nexport default PagesNavigator;\n","import { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { searchCharacters } from \"../api/rickAndMortyApi\";\nimport CharacterResult from \"./CharacterResult\";\nimport PagesNavigator from \"./PagesNavigator\";\nimport \"./SearchResults.css\";\n\nconst SearchResults = () => {\n  const location = useLocation();\n  const { isLoading, data, error, refetch } = useQuery(\n    \"searchCharacters\",\n    async () => {\n      const params = new URLSearchParams(location.search);\n      const name = params.get(\"name\");\n      const status = params.get(\"status\") || \"any\";\n      const gender = params.get(\"gender\") || \"any\";\n      const page = params.get(\"page\") || \"1\";\n      return await searchCharacters({ name, status, gender, page });\n    }\n  );\n\n  useEffect(() => {\n    refetch();\n  }, [location, refetch]);\n\n  if (isLoading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  if (data.error) {\n    return (\n      <div>\n        <h2>Error 404 \"{new URLSearchParams(location.search).get(\"name\")}\" not found</h2>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"container-header\">\n        <p className=\"search-results-title\">\n          Seach results for \"{new URLSearchParams(location.search).get(\"name\")}\"\n        </p>\n        <PagesNavigator locationSearch={location.search} requestInfo={data.info} />\n      </div>\n      <div className=\"search-results\">\n        {data.results.map((character) => {\n          return <CharacterResult key={character.id} character={character} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport SearchResults from \"./components/SearchResults\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport \"./App.css\";\n\nconst App = () => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n      },\n    },\n  });\n\n  return (\n    <Router>\n      <Navbar />\n      <Header />\n      <QueryClientProvider client={queryClient}>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/search/\" exact component={SearchResults} />\n      </QueryClientProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}